JSON	

4. Создать внешний репозиторий c названием JSON.	

   	Github
   	Repositories
	New
	JSON
	+readme file
	create new repository

5. Клонировать репозиторий JSON на локальный компьютер.	

	$ git clone https://github.com/YanaAseeva/JSON

6. Внутри локального JSON создать файл “new.json”.

	$ cd JSON
	$ touch new.json

7. Добавить файл под гит.

	$ git add new.json

8. Закоммитить файл.	

	$ git commit -m "first_commit"

9. Отправить файл на внешний GitHub репозиторий.
	
	$ git push origin main

10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата).
    Всё написать в формате JSON.	

	$ nano new.json

		{
		"name": "Aseeva Yana Nikolaevna",
		"age": 30,
		"number of pets": 2,
		"desired salary": "500 $",
		}

	ctrl+O
	ctrl+X

11. Отправить изменения на внешний репозиторий.	

	$ git add new.json
	$ git commit -m "second_commit"
	$ git push origin main

12. Создать файл preferences.json	

	$ touch preferences.json

13. В файл preferences.json добавить информацию о своих предпочтениях 
   (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.	

	$ nano preferences.json

		{
		"favorite movie": "Harry Potter",
		"favorite series": "The Big Bang Theory",
		"favorite food": "pizza",
		"favorite season": "summer",
		"the country you would like to visit": "Iceland"
		}

	ctrl+O
	ctrl+X

14. Создать файл skills.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON	
	
	$ touch skills.json
	$ nano skills.json

		{
		"skills": ["JS","Git","Postman", "SQL"]
		}

	ctrl+O
	ctrl+X

15. Отправить сразу 2 файла на внешний репозиторий.	

	$ git add skills.json preferences.json
	$ git commit -m "third_commit"
	$ git push origin main

16. На веб интерфейсе создать файл bug_report.json.	

	JSON/ Add file 
	create new file
	bug_report.json

17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

	commit new file

18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.	

	XML/Bug_report.xml
	edit this file

{
        "ID": "A1",
        "Title": "In user's personal account in address book section it is unable to add new address",
        "Project": "Testing an internet shop 'Itcobra",
        "Pre-conditions": "To be signed up",
        "STR": [
                "1. Log in to the site test.itcobra.ru",
                "2. Click 'personal account'",
                "3. In drop-down list click 'personal account'",
                "4. Click 'address book'",
                "5. Click 'add new address'"
                ],
        "Enviroment":
        {
                "OS": "Windows 10 x64 build 19043",
                "Browser": "Google Chrome v96.0.4664.45 x64"
        },
        "Component": "Button 'add new address'",
        "Build": "0.5.7",
        "Actual result": "Click on the button 'add new address' doesn't add new address",
        "Expected result": "Click on the button 'add new address' adds new address",
        "Severity": "Trivial",
        "Priority": "medium",
        "Status": "Open",
        "Author": "Yana Aseeva",
        "Sign to": "JaneA",
        "Attachments": "link to the picture"
}


19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.	

	Commit changes

20. Синхронизировать внешний и локальный репозиторий JSON	

	$ git pull
	
	

XML	


21. Создать внешний репозиторий c названием XML.	

	$  curl -H "Authorization: token access_token" --data '{"name":"XML"}' https://api.github.com/user/repos

22. Клонировать репозиторий XML на локальный компьютер.	

	$ git clone https://github.com/YanaAseeva/XML

23. Внутри локального XML создать файл “new.xml”.	

	$ cd XML
	$ touch New.xml

24. Добавить файл под гит.	

	$ git add .

25. Закоммитить файл.	

	$ git commit -m "xml"

26. Отправить файл на внешний GitHub репозиторий.	

	$ git push origin main

27. Отредактировать содержание файла “new.xml” 
    написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.	

	$ nano New.xml

<About_me>
       <name>AseevaYana</name>
       <age>30</age>
       <number_of_pets>2</number_of_pets>
       <desired_salary>500$</desired_salary>
</About_me>

ctrl+O
ctrl+X

28. Отправить изменения на внешний репозиторий.	

	$ git add .
	$ git commit -m "about_me"
	$ git push origin main

29. Создать файл preferences.xml	

	$ touch preferences.xml

30. В файл preferences.xml добавить информацию о своих предпочтениях 
   (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.	

	$ nano preferences.xml

<preferences>
       <favorite_movie>Harry Potter</favorite_movie>
       <favorite_series>The Big Bang Theory</favorite_series>
       <favorite_food>pizza</favorite_food>
       <favorite_season>summer</favorite_season>
       <country_to_visit>Iceland</country_to_visit>
       </preferences>

ctrl+O
ctrl+X

31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML	

	$ touch skills.xml
	$ nano skills.xml

		<skills>JS, Git, Postman, SQL</skills>

	ctrl+O
	ctrl+X


32. Сделать коммит в одну строку.

	$ git commit -a -m "all_changes"


33. Отправить сразу 2 файла на внешний репозиторий.	

	git push

34. На веб интерфейсе создать файл bug_report.xml.	

	XML/
	Add file
	create new file
	bug_report.xml

35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.	

	commit new file

36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.	

	XML/Bug_report.xml
	edit this file

<bugReport>
        <ID>A1</ID>
        <Title>In user's personal account in address book section it is unable to add new address</Title>
        <Project>Testing an internet shop 'Itcobra'</Project>
        <Pre-conditions>To be signed up</Pre-conditions>
        <STR>
                1. Log in to the site test.itcobra.ru
                2. Click 'personal account'"",
                3. In drop-down list click 'personal account'
                4. Click 'address book'
                5. Click 'add new address'
         </STR> 
        <Enviroment>
       
                OS: Windows 10 x64 build 19043
                Browser: Google Chrome v96.0.4664.45 x64
        </Enviroment>
        <Component>Button 'add new address'</Component>
        <Build>0.5.7</Build>
        <Actual_result>Click on the button 'add new address' doesn't add new address</Actual_result>
        <Expected_result>Click on the button 'add new address' adds new address</Expected_result>
        <Severity>Trivial</Severity>
        <Priority>medium</Priority>
        <Status>Open</Status>
        <Author>Yana Aseeva</Author>
        <Sign_to>JaneA</Sign_to>
        <Attachments>link to the picture</Attachments>
</bugReport>

37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.	

	commit changes

38. Синхронизировать внешний и локальный репозиторий XML

	git pull
	

TXT	

1. Создать внешний репозиторий c названием TXT.	

	$  curl -H "Authorization: token access_token" --data '{"name":"TXT"}' https://api.github.com/user/repos

2. Клонировать репозиторий TXT на локальный компьютер.	

	$ git clone https://github.com/YanaAseeva/TXT

3. Внутри локального TXT создать файл “new.txt”.	

	$ cd TXT
	$ touch new.txt

4. Добавить файл под гит.	

	git add new.txt

5. Закоммитить файл.	

	$ git commit -m "new_txt"

6. Отправить файл на внешний GitHub репозиторий.	

	$ git push origin main

7. Отредактировать содержание файла “new.txt” 
   написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.	

	$ nano new.txt

		About me
       		Name: AseevaYana
       		Age: 30
       		Number of pets: 2
      		Desired salary: 500$

	ctrl+O
	ctrl+X

8. Отправить изменения на внешний репозиторий.	

	$ git add new.txt
	$ git commit -m "about_me"
	$ git push origin main

9. Создать файл preferences.txt

	$ touch preferences.txt

10. В файл preferences.txt добавить информацию о своих предпочтениях 
    (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.	

	$ nano preferences.xml


		Favorite movie: Harry Potter
		Favorite series: The Big Bang Theory
		Favorite food: pizza
		Favorite season: summer
		The country you would like to visit: Iceland

	ctrl+O
	ctrl+X

11. Создать файл skills.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT

	$ touch skills.txt
	$ nano skills.txt

		Skills: JS, Git, Postman, SQL

	ctrl+O
	ctrl+X

12. Сделать коммит в одну строку.	

	$ git commit -a -m "s&p"

13. Отправить сразу 2 файла на внешний репозиторий.	

	$ git push origin main

14. На веб интерфейсе создать файл bug_report.txt.	

	TXT/
	Add file
	create new file
	Bug_report.txt

15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.	

	Commit new file


16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.	

	TXT/Bug_report.txt
	edit this file

BugReport
        ID: A1
        Title: In user's personal account in address book section it is unable to add new address
        Project: Testing an internet shop 'Itcobra'
        Pre-conditions: To be signed up
        STR
                1. Log in to the site test.itcobra.ru
                2. Click 'personal account'
                3. In drop-down list click 'personal account'
                4. Click 'address book'
                5. Click 'add new address'       
        Enviroment       
                OS: Windows 10 x64 build 19043
                Browser: Google Chrome v96.0.4664.45 x64
        Component: Button 'add new address'
        Build:0.5.7
        Actual result:Click on the button 'add new address' doesn't add new address
        Expected result:Click on the button 'add new address' adds new address
        Severity:Trivial
        Priority:medium
        Status:Open
        Author:Yana Aseeva
        Sign to:aneA
        Attachments:link to the picture

17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.	

	Commit changes

18. Синхронизировать внешний и локальный репозиторий TXT	

	git pull